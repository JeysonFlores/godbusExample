// this file was generated by xml2godbus. You probably have to edit this file
package interfaces

import (
	"database/sql"
	"errors"
	"fmt"

	"github.com/godbus/dbus/v5"
	"github.com/godbus/dbus/v5/introspect"
	"github.com/jeysonflores/dbustest/pkg/datamanager"
)

type Palette struct {
	Bus  *dbus.Conn
	Conn *sql.DB
}

//Methods
func (p *Palette) Ping() (string, *dbus.Error) {
	return "Pong", nil
}

func (p *Palette) Insert(name string, desc string) (string, *dbus.Error) {
	palette := &datamanager.Palette{
		Con: p.Conn,
	}
	err := palette.Insert(name, desc)
	if (err) != nil {
		return "", dbus.MakeFailedError(errors.New("something went wrong"))
	}
	return "palette inserted", nil
}

func (p *Palette) Ping3(id int) (string, *dbus.Error) {
	palette := &datamanager.Palette{
		Con: p.Conn,
	}
	shit, err := palette.GetById(id)
	if (err) != nil {
		return "", dbus.MakeFailedError(errors.New("something went wrong"))
	}

	return shit, nil
}

//Signals
func (p *Palette) EmitPingedSignal(param string) {
	p.Bus.Emit(p.GetObjectPath(), p.GetInterfacePath()+".Pinged", param)
}

//Utils
func (p *Palette) GetObjectPath() dbus.ObjectPath {
	return dbus.ObjectPath("com/github/jeysonflores/DBusTest/Palette")
}

func (p *Palette) GetInterfacePath() string {
	return "com.github.jeysonflores.DBusTest.Palette"
}

func (p *Palette) GetIntroData() string {
	return `<node>
	<interface name="com.github.jeysonflores.DBusTest.Palette">
		<method name="Ping">
			<arg name="result" direction="out" type="s"/>
		</method>
		<method name="Insert">
			<arg name="name" direction="in" type="s"/>
			<arg name="desc" direction="in" type="s"/>
			<arg name="result" direction="out" type="s"/>
		</method>
		<method name="Ping3">
			<arg name="id" direction="in" type="i"/>
			<arg name="result" direction="out" type="s"/>
		</method>
		<signal name="Pinged">
			<arg name="param" direction="out" type="s"/>
		</signal>
	</interface>
    <interface name="org.freedesktop.DBus.Introspectable">
        <method name="Introspect">
                <arg name="out" direction="out" type="s"/>
        </method>
    </interface>
</node>`
}

func (p *Palette) RegisterToBus() error {
	p.Bus.Export(p, p.GetObjectPath(), p.GetInterfacePath())
	fmt.Println("object exported")
	p.Bus.Export(introspect.Introspectable(p.GetIntroData()), p.GetObjectPath(), "org.freedesktop.DBus.Introspectable")
	return nil
}
